#!/usr/bin/env python3
# -*- coding: UTF-8 -*-
# Project: sprunge
# Author: kevr <kevr@nixcode.us>
# License: MIT
# Description: A tool which uploads data from stdin to sprunge.us
import sys
import urllib.parse
import urllib.request
from select import select

## Voila hardcoded settings~
url = "http://sprunge.us"
timeout = 5 # Change this to any http request timeout you desire

## Immediately timed out select poll
def has_data(fd):
    return select([fd], [], [], 0.0) == ([fd], [], [])

def quit(code, msg):
    print(msg)
    return code

## Sorry for the C-style functions, I prefer them
def main():
    if not has_data(sys.stdin):
        return quit(1, "sprunge: no data given via stdin")

    try:
        stdin = sys.stdin.read()
    except UnicodeDecodeError:
        return quit(2, "sprunge: an error occured reading stdin")
        
    post_data = { "sprunge": stdin }
    post_data = urllib.parse.urlencode(post_data)

    # The actual request process
    request = urllib.request.Request(url, post_data.encode("UTF-8"))
    reply = urllib.request.urlopen(request, timeout=timeout)

    if not reply:
        return quit(3, "sprunge: no response from '{}'".format(url))

    # Read in the reply socket's data and close it cleanly
    response = reply.read().decode("UTF-8")
    reply.close()

    # End the program by printing out sprunge's response
    print(response.rstrip())

    return 0

# main execution
if __name__ == "__main__":
    e = main()
    exit(e)

